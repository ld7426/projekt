// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cmo, use-js-string=true, version=5.8.2

//# unitInfo: Provides: Dune__exe__View
//# unitInfo: Requires: CamlinternalLazy, Definicije__Avtomat, Definicije__Stanje, Definicije__Trak, Definicije__ZagnaniAvtomat, Dune__exe__Model, Dune__exe__Vektor, Stdlib, Stdlib__List, Stdlib__String, Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_fill$4 = "fill",
    cst_g$3 = "g",
    cst_h2$1 = "h2",
    cst_none$1 = "none",
    cst_stroke$5 = "stroke",
    cst_stroke_width$1 = "stroke-width",
    cst_white$1 = "white",
    caml_equal = runtime.caml_equal,
    caml_obj_tag = runtime.caml_obj_tag;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = "#",
    barva_sprejemnega_stanja = "rgb(56, 142, 60)",
    barva_trenutnega_stanja = "rgb(255, 242, 202)",
    barva_zacetnega_stanja = "rgb(8, 118, 155)",
    privzeta_barva_crt = "black",
    privzeta_barva_polnila = cst_white$1,
    Vdom = global_data.Vdom,
    CamlinternalLazy = global_data.CamlinternalLazy,
    Stdlib_String = global_data.Stdlib__String,
    Dune_exe_Model = global_data.Dune__exe__Model,
    Definicije_ZagnaniAvtomat = global_data.Definicije__ZagnaniAvtomat,
    Definicije_Avtomat = global_data.Definicije__Avtomat,
    Stdlib_List = global_data.Stdlib__List,
    Stdlib = global_data.Stdlib,
    Definicije_Trak = global_data.Definicije__Trak,
    Dune_exe_Vektor = global_data.Dune__exe__Vektor,
    Definicije_Stanje = global_data.Definicije__Stanje,
    Parametri =
      [0,
       barva_sprejemnega_stanja,
       barva_trenutnega_stanja,
       barva_zacetnega_stanja,
       3.,
       10.,
       20.,
       0.4,
       10.,
       5.,
       20.,
       25.,
       privzeta_barva_crt,
       privzeta_barva_polnila],
    cst_r = "r",
    cst_cy = "cy",
    cst_cx = "cx",
    cst_circle = "circle",
    cst_y2 = "y2",
    cst_x2 = "x2",
    cst_y1 = "y1",
    cst_x1 = "x1",
    cst_line = "line",
    cst_g = cst_g$3,
    cst_central = "central",
    cst_dominant_baseline = "dominant-baseline",
    cst_middle = "middle",
    cst_text_anchor = "text-anchor",
    cst_y = "y",
    cst_x = "x",
    cst_text = "text",
    cst_fill = cst_fill$4,
    cst_stroke = cst_stroke$5,
    cst_stroke$0 = cst_stroke$5,
    cst_none = cst_none$1,
    cst_fill$0 = cst_fill$4,
    cst_stroke$1 = cst_stroke$5,
    _a_ = [0, 0],
    cst_g$0 = cst_g$3,
    cst_white = cst_white$1,
    cst_fill$1 = cst_fill$4,
    cst_none$0 = cst_none$1,
    cst_fill$2 = cst_fill$4,
    cst_stroke$2 = cst_stroke$5,
    cst_stroke$3 = cst_stroke$5,
    cst_g$1 = cst_g$3,
    _b_ = [0, 0.3],
    cst_white$0 = cst_white$1,
    cst_fill$3 = cst_fill$4,
    cst_stroke$4 = cst_stroke$5,
    cst_stroke_width = cst_stroke_width$1,
    cst_g$2 = cst_g$3,
    cst_h2 = cst_h2$1,
    cst_mark = "mark",
    cst_h2$0 = cst_h2$1,
    cst_preberi_naslednji_znak = "preberi naslednji znak",
    cst_href = "href",
    cst_button = "button",
    cst_role = "role",
    cst_a = "a",
    cst_stroke_width$0 = cst_stroke_width$1,
    cst_height = "height",
    cst_width = "width",
    cst_svg = "svg",
    cst_header = "header",
    cst_article = "article";
   function int_of_float_attr(tag, value){
    return caml_call2(Vdom[37], tag, value | 0);
   }
   function svg_krog(opt, sredisce, polmer){
    var
     a = opt ? opt[1] : 0,
     _aG_ = [0, int_of_float_attr(cst_r, polmer), 0],
     _aH_ = [0, int_of_float_attr(cst_cy, sredisce[2]), _aG_],
     _aI_ = [0, int_of_float_attr(cst_cx, sredisce[1]), _aH_],
     _aJ_ = [0, caml_call2(Stdlib[37], _aI_, a)];
    return caml_call4(Vdom[52], cst_circle, 0, _aJ_, 0);
   }
   function svg_daljica(opt, zacetek, konec){
    var
     a = opt ? opt[1] : 0,
     _aB_ = [0, int_of_float_attr(cst_y2, konec[2]), 0],
     _aC_ = [0, int_of_float_attr(cst_x2, konec[1]), _aB_],
     _aD_ = [0, int_of_float_attr(cst_y1, zacetek[2]), _aC_],
     _aE_ = [0, int_of_float_attr(cst_x1, zacetek[1]), _aD_],
     _aF_ = [0, caml_call2(Stdlib[37], _aE_, a)];
    return caml_call4(Vdom[52], cst_line, 0, _aF_, 0);
   }
   function svg_puscica(opt, zacetek, konec){
    var
     a = opt ? opt[1] : 0,
     vektor = caml_call2(Dune_exe_Vektor[3], konec, zacetek),
     normala = [254, - vektor[2], vektor[1]],
     _ar_ = caml_call2(Dune_exe_Vektor[1], -1., vektor),
     vektor_leve_konice =
       caml_call3(Dune_exe_Vektor[6], [0, Parametri[7]], _ar_, normala),
     _as_ = caml_call2(Dune_exe_Vektor[1], -1., normala),
     _at_ = caml_call2(Dune_exe_Vektor[1], -1., vektor),
     vektor_desne_konice =
       caml_call3(Dune_exe_Vektor[6], [0, Parametri[7]], _at_, _as_),
     _au_ = caml_call1(Dune_exe_Vektor[5], vektor_leve_konice),
     _av_ = caml_call2(Dune_exe_Vektor[1], Parametri[5], _au_),
     leva_konica = caml_call2(Dune_exe_Vektor[2], konec, _av_),
     _aw_ = caml_call1(Dune_exe_Vektor[5], vektor_desne_konice),
     _ax_ = caml_call2(Dune_exe_Vektor[1], Parametri[5], _aw_),
     desna_konica = caml_call2(Dune_exe_Vektor[2], konec, _ax_),
     _ay_ = [0, svg_daljica([0, a], konec, desna_konica), 0],
     _az_ = [0, svg_daljica([0, a], konec, leva_konica), _ay_],
     _aA_ = [0, svg_daljica([0, a], zacetek, konec), _az_];
    return caml_call4(Vdom[52], cst_g, 0, 0, _aA_);
   }
   function svg_oznaka(opt, polozaj, besedilo){
    var
     a = opt ? opt[1] : 0,
     _al_ = [0, caml_call2(Vdom[53], 0, besedilo), 0],
     _am_ = [0, caml_call2(Vdom[36], cst_dominant_baseline, cst_central), 0],
     _an_ = [0, caml_call2(Vdom[36], cst_text_anchor, cst_middle), _am_],
     _ao_ = [0, int_of_float_attr(cst_y, polozaj[2]), _an_],
     _ap_ = [0, int_of_float_attr(cst_x, polozaj[1]), _ao_],
     _aq_ = [0, caml_call2(Stdlib[37], _ap_, a)];
    return caml_call4(Vdom[52], cst_text, 0, _aq_, _al_);
   }
   function prikaz_stanja(model, q){
    var
     avtomat = caml_call1(Definicije_ZagnaniAvtomat[2], model[1]),
     polozaj = caml_call2(Dune_exe_Model[2], model, q),
     barva_robu =
       caml_equal(q, caml_call1(Definicije_Avtomat[6], avtomat))
        ? Parametri[3]
        : caml_call2
           (Definicije_Avtomat[9], avtomat, q)
          ? Parametri[1]
          : Parametri[12],
     barva_polnila =
       caml_equal(q, caml_call1(Definicije_ZagnaniAvtomat[4], model[1]))
        ? Parametri[2]
        : Parametri[13],
     _ac_ =
       [0, svg_oznaka(0, polozaj, caml_call1(Definicije_Stanje[2], q)), 0],
     _ad_ = Parametri[10],
     _ae_ = [0, caml_call2(Vdom[36], cst_fill, barva_polnila), 0],
     svg_elementi =
       [0,
        svg_krog
         ([0, [0, caml_call2(Vdom[36], cst_stroke, barva_robu), _ae_]],
          polozaj,
          _ad_),
        _ac_];
    if(caml_equal(q, caml_call1(Definicije_Avtomat[6], avtomat)))
     var
      _af_ = caml_call2(Dune_exe_Vektor[3], polozaj, [254, Parametri[10], 0.]),
      _ag_ =
        caml_call2
         (Dune_exe_Vektor[3],
          polozaj,
          [254, Parametri[10] + Parametri[6], 0.]),
      svg_elementi$0 =
        [0,
         svg_puscica
          ([0, [0, caml_call2(Vdom[36], cst_stroke$0, Parametri[3]), 0]],
           _ag_,
           _af_),
         svg_elementi];
    else
     var svg_elementi$0 = svg_elementi;
    if(caml_call2(Definicije_Avtomat[9], avtomat, q))
     var
      _ah_ = Parametri[10] - Parametri[9],
      _ai_ = [0, caml_call2(Vdom[36], cst_fill$0, cst_none), 0],
      _aj_ =
        [0,
         svg_krog
          ([0, [0, caml_call2(Vdom[36], cst_stroke$1, Parametri[1]), _ai_]],
           polozaj,
           _ah_),
         0],
      svg_elementi$1 = caml_call2(Stdlib[37], svg_elementi$0, _aj_);
    else
     var svg_elementi$1 = svg_elementi$0;
    var
     _ak_ =
       [0,
        [0, caml_call3(Vdom[8], _a_, 0, function(param){return [0, q];}), 0]];
    return caml_call4(Vdom[52], cst_g$0, 0, _ak_, svg_elementi$1);
   }
   function prikaz_zanke(zacetek, oznaka){
    var
     polozaj_oznake =
       caml_call2(Dune_exe_Vektor[3], zacetek, [254, 0., 2. * Parametri[11]]),
     _U_ = [0, svg_oznaka(0, polozaj_oznake, oznaka), 0],
     _V_ = Parametri[8],
     _W_ =
       [0,
        svg_krog
         ([0, [0, caml_call2(Vdom[36], cst_fill$1, cst_white), 0]],
          polozaj_oznake,
          _V_),
        _U_],
     _X_ = Parametri[11],
     _Y_ = caml_call2(Dune_exe_Vektor[3], zacetek, [254, 0., Parametri[11]]),
     _Z_ = [0, caml_call2(Vdom[36], cst_fill$2, cst_none$0), 0],
     ___ =
       [0,
        svg_krog
         ([0, [0, caml_call2(Vdom[36], cst_stroke$2, Parametri[12]), _Z_]],
          _Y_,
          _X_),
        _W_],
     _$_ = caml_call2(Dune_exe_Vektor[2], zacetek, [254, Parametri[10], -2.]),
     _aa_ =
       caml_call2(Dune_exe_Vektor[2], zacetek, [254, Parametri[10] + 2., -3.]),
     _ab_ =
       [0,
        svg_puscica
         ([0, [0, caml_call2(Vdom[36], cst_stroke$3, Parametri[12]), 0]],
          _aa_,
          _$_),
        ___];
    return caml_call4(Vdom[52], cst_g$1, 0, 0, _ab_);
   }
   function prikaz_prehoda(zacetek, konec, oznaka){
    var
     _O_ = caml_call2(Dune_exe_Vektor[7], zacetek, konec),
     lambda = Parametri[10] / _O_,
     zacetek_puscice =
       caml_call3(Dune_exe_Vektor[6], [0, lambda], zacetek, konec),
     konec_puscice =
       caml_call3(Dune_exe_Vektor[6], [0, 1. - lambda], zacetek, konec),
     polozaj_oznake = caml_call3(Dune_exe_Vektor[6], _b_, zacetek, konec),
     _P_ = [0, svg_oznaka(0, polozaj_oznake, oznaka), 0],
     _Q_ = Parametri[8],
     _R_ =
       [0,
        svg_krog
         ([0, [0, caml_call2(Vdom[36], cst_fill$3, cst_white$0), 0]],
          polozaj_oznake,
          _Q_),
        _P_],
     _S_ = [0, caml_call2(Vdom[36], cst_stroke$4, Parametri[12]), 0],
     _T_ =
       [0,
        svg_puscica
         ([0, [0, int_of_float_attr(cst_stroke_width, Parametri[4]), _S_]],
          zacetek_puscice,
          konec_puscice),
        _R_];
    return caml_call4(Vdom[52], cst_g$2, 0, 0, _T_);
   }
   function prikaz_traku(model){
    var
     trak = caml_call1(Definicije_ZagnaniAvtomat[3], model[1]),
     _F_ = model[3];
    if(typeof _F_ === "number" && _F_){
     var
      _G_ = caml_call1(Definicije_Trak[6], trak),
      _H_ = [0, caml_call1(Vdom[42], _G_), 0],
      _I_ =
        [0,
         [0, caml_call3(Vdom[19], 0, 0, function(niz){return [2, niz];}), _H_]],
      _J_ = [0, caml_call3(Vdom[60], 0, _I_, 0), 0];
     return caml_call5(Vdom[51], 0, cst_h2, 0, 0, _J_);
    }
    var
     prebrani = caml_call1(Definicije_Trak[7], trak),
     neprebrani = caml_call1(Definicije_Trak[8], trak),
     _K_ = [0, caml_call2(Vdom[53], 0, neprebrani), 0],
     _L_ = [0, caml_call5(Vdom[51], 0, cst_mark, 0, 0, _K_), 0],
     _M_ = [0, caml_call2(Vdom[53], 0, prebrani), _L_],
     _N_ = [0, [0, caml_call3(Vdom[13], 0, 0, function(param){return 2;}), 0]];
    return caml_call5(Vdom[51], 0, cst_h2$0, 0, _N_, _M_);
   }
   function prikaz_gumba_za_naslednji_znak(model){
    var
     _w_ = [0, caml_call2(Vdom[53], 0, cst_preberi_naslednji_znak), 0],
     _y_ = 1 === model[3] ? 1 : 0,
     _x_ = 0;
    if(_y_)
     var _z_ = _y_;
    else
     var
      _E_ = caml_call1(Definicije_ZagnaniAvtomat[3], model[1]),
      _z_ = caml_call1(Definicije_Trak[3], _E_);
    var
     _A_ = [0, caml_call1(Vdom[43], _z_), _x_],
     _B_ = [0, caml_call3(Vdom[11], 0, 0, function(param){return 0;}), _A_],
     _C_ = [0, caml_call2(Vdom[36], cst_href, cst), _B_],
     _D_ = [0, [0, caml_call2(Vdom[36], cst_role, cst_button), _C_]];
    return caml_call5(Vdom[51], 0, cst_a, 0, _D_, _w_);
   }
   function prikaz_avtomata(model){
    var
     avtomat = caml_call1(Definicije_ZagnaniAvtomat[2], model[1]),
     _g_ = caml_call1(Definicije_Avtomat[7], avtomat),
     stanja =
       caml_call2
        (Stdlib_List[20],
         function(_v_){return prikaz_stanja(model, _v_);},
         _g_),
     _h_ = caml_call1(Definicije_Avtomat[8], avtomat),
     prehodi =
       caml_call2
        (Stdlib_List[20],
         function(param){
          var
           dst = param[3],
           chr = param[2],
           src = param[1],
           svg_oznaka = caml_call2(Stdlib_String[1], 1, chr);
          if(caml_equal(src, dst))
           return prikaz_zanke
                   (caml_call2(Dune_exe_Model[2], model, src), svg_oznaka);
          var _u_ = caml_call2(Dune_exe_Model[2], model, dst);
          return prikaz_prehoda
                  (caml_call2(Dune_exe_Model[2], model, src), _u_, svg_oznaka);
         },
         _h_);
    if(typeof model[3] === "number")
     var a = 0;
    else
     var
      _n_ = [0, caml_call3(Vdom[10], 0, 0, function(param){return 1;}), 0],
      a =
        [0,
         caml_call3
          (Vdom[21],
           0,
           0,
           function(ev){
            var _o_ = ev[6], _p_ = caml_obj_tag(_o_);
            a:
            if(250 === _p_)
             var _q_ = _o_[1];
            else{
             if(246 !== _p_ && 244 !== _p_){var _q_ = _o_; break a;}
             var _q_ = caml_call1(CamlinternalLazy[2], _o_);
            }
            var _r_ = ev[5], _s_ = caml_obj_tag(_r_);
            a:
            if(250 === _s_)
             var _t_ = _r_[1];
            else{
             if(246 !== _s_ && 244 !== _s_){var _t_ = _r_; break a;}
             var _t_ = caml_call1(CamlinternalLazy[2], _r_);
            }
            return [1, [254, _t_, _q_]];
           }),
         _n_];
    var
     _i_ = caml_call2(Stdlib[37], prehodi, stanja),
     _j_ = [0, int_of_float_attr(cst_stroke_width$0, Parametri[4]), 0],
     _k_ = [0, int_of_float_attr(cst_height, model[5]), _j_],
     _l_ = [0, int_of_float_attr(cst_width, model[4]), _k_],
     _m_ = [0, caml_call2(Stdlib[37], a, _l_)];
    return caml_call4(Vdom[52], cst_svg, 0, _m_, _i_);
   }
   function view(model){
    var
     _c_ = [0, prikaz_avtomata(model), 0],
     _d_ = [0, prikaz_gumba_za_naslednji_znak(model), 0],
     _e_ = [0, prikaz_traku(model), _d_],
     _f_ = [0, caml_call5(Vdom[51], 0, cst_header, 0, 0, _e_), _c_];
    return caml_call5(Vdom[51], 0, cst_article, 0, 0, _f_);
   }
   var
    Dune_exe_View =
      [0,
       Parametri,
       int_of_float_attr,
       svg_krog,
       svg_daljica,
       svg_puscica,
       svg_oznaka,
       prikaz_stanja,
       prikaz_zanke,
       prikaz_prehoda,
       prikaz_traku,
       prikaz_gumba_za_naslednji_znak,
       prikaz_avtomata,
       view];
   runtime.caml_register_global(89, Dune_exe_View, "Dune__exe__View");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
