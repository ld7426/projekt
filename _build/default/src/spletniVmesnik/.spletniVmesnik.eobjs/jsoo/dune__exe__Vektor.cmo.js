// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cmo, use-js-string=true, version=5.8.2

//# unitInfo: Provides: Dune__exe__Vektor
//# unitInfo: Requires: Stdlib, Stdlib__List
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib = global_data.Stdlib,
    Stdlib_List = global_data.Stdlib__List;
   function symbol(k, vec){return [254, k * vec[1], k * vec[2]];}
   function symbol$0(vec1, vec2){
    return [254, vec1[1] + vec2[1], vec1[2] + vec2[2]];
   }
   function symbol$1(vec1, vec2){return symbol$0(vec1, symbol(-1., vec2));}
   function dolzina(vec){
    return Math.sqrt(Math.pow(vec[1], 2.) + Math.pow(vec[2], 2.));
   }
   function normiraj(vec){return symbol(1. / dolzina(vec), vec);}
   function sredina(opt, zacetek, konec){
    if(opt) var sth = opt[1], lambda = sth; else var lambda = 0.5;
    var _a_ = symbol(lambda, konec);
    return symbol$0(symbol(1. - lambda, zacetek), _a_);
   }
   function razdalja(zacetek, konec){
    return dolzina(symbol$1(zacetek, konec));
   }
   function koreni_enote(n, sirina, visina){
    var sredisce = [254, sirina / 2., visina / 2.];
    return caml_call2
            (Stdlib_List[10],
             n,
             function(i){
              var
               kot = 6.283185307179586 * i / n,
               polmer = caml_call2(Stdlib[16], sirina, visina) / 2. * 0.9;
              return symbol$0
                      (sredisce,
                       [254, polmer * Math.cos(kot), polmer * Math.sin(kot)]);
             });
   }
   var
    Dune_exe_Vektor =
      [0,
       symbol,
       symbol$0,
       symbol$1,
       dolzina,
       normiraj,
       sredina,
       razdalja,
       koreni_enote];
   runtime.caml_register_global(15, Dune_exe_Vektor, "Dune__exe__Vektor");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiIuc3BsZXRuaVZtZXNuaWsuZW9ianMvanNvby9kdW5lX19leGVfX1Zla3Rvci5jbW8uanMiLCJzb3VyY2VSb290IjoiIiwibmFtZXMiOlsic3ltYm9sIiwiayIsInZlYyIsInN5bWJvbCQwIiwidmVjMSIsInZlYzIiLCJzeW1ib2wkMSIsImRvbHppbmEiLCJub3JtaXJhaiIsInNyZWRpbmEiLCJvcHQiLCJ6YWNldGVrIiwia29uZWMiLCJzdGgiLCJsYW1iZGEiLCJyYXpkYWxqYSIsImtvcmVuaV9lbm90ZSIsIm4iLCJzaXJpbmEiLCJ2aXNpbmEiLCJzcmVkaXNjZSIsImkiLCJrb3QiLCJwb2xtZXIiXSwic291cmNlcyI6WyIvd29ya3NwYWNlX3Jvb3Qvc3JjL3NwbGV0bmlWbWVzbmlrL3Zla3Rvci5tbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0c7Ozs7Ozs7OztZQUVJQSxPQUFRQyxHQUFFQyxLQUFNLGFBQVJELElBQUVDLFFBQUZELElBQUVDLFFBQXdDO1lBQ2xEQyxTQUFRQyxNQUFLQztJQUFPLGFBQVpELFVBQUtDLFNBQUxELFVBQUtDO0dBQXFEO1lBQ2xFQyxTQUFRRixNQUFLQyxNQUFPLE9BRHBCRixTQUNRQyxNQUZSSixZQUVhSyxPQUE4QjtZQUMzQ0UsUUFBUUw7SUFBTSxPQUFBLFVBQU0sU0FBWkEsY0FBNkIsU0FBN0JBO0dBQTJDO1lBQ25ETSxTQUFTTixLQUFNLE9BSmZGLFlBR0FPLFFBQ1NMLE1BQUFBLEtBQWlDO1lBRTFDTyxRQUFVQyxLQUFjQyxTQUFRQztJQUNsQyxHQURZRixTQUFTRyxNQUFUSCxRQUFBSSxTQUFTRCxjQUFUQztJQUNxQixVQVAvQmQsT0FNVWMsUUFBc0JGO0lBQ0QsT0FOL0JULFNBREFILFlBTVVjLFFBQWNIO0dBQ3lCO1lBRWpESSxTQUFTSixTQUFRQztJQUFRLE9BTnpCTCxRQURBRCxTQU9TSyxTQUFRQztHQUFtQztZQUVwREksYUFBYUMsR0FBRUMsUUFBT0M7SUFFVCxJQUFYQyxpQkFGYUYsYUFBT0M7SUFHWixPQUFBOzthQUhHRjtzQkFHRUk7Y0FDYjtlQUFJQywwQkFEU0QsSUFIRko7ZUFLUE0sU0FBUyx1QkFMQUwsUUFBT0M7Y0FNUCxPQWhCZmhCO3VCQVlFaUI7NkJBR0lHLFNBQ3lCLFNBRnpCRCxNQUNBQyxTQUNnRCxTQUZoREQ7YUFFeUQ7R0FBQzs7OztPQWpCaEV0QjtPQUNBRztPQUNBRztPQUNBQztPQUNBQztPQUVBQztPQUdBTTtPQUVBQzs7O0UiLCJzb3VyY2VzQ29udGVudCI6WyJ0eXBlIHQgPSB7IHggOiBmbG9hdDsgeSA6IGZsb2F0IH1cblxubGV0ICggKiouICkgayB2ZWMgPSB7IHggPSBrICouIHZlYy54OyB5ID0gayAqLiB2ZWMueSB9XG5sZXQgKCArKy4gKSB2ZWMxIHZlYzIgPSB7IHggPSB2ZWMxLnggKy4gdmVjMi54OyB5ID0gdmVjMS55ICsuIHZlYzIueSB9XG5sZXQgKCAtLS4gKSB2ZWMxIHZlYzIgPSB2ZWMxICsrLiAoLTEuICoqLiB2ZWMyKVxubGV0IGRvbHppbmEgdmVjID0gc3FydCAoKHZlYy54ICoqIDIuKSArLiAodmVjLnkgKiogMi4pKVxubGV0IG5vcm1pcmFqIHZlYyA9ICgxLiAvLiBkb2x6aW5hIHZlYykgKiouIHZlY1xuXG5sZXQgc3JlZGluYSA/KGxhbWJkYSA9IDAuNSkgemFjZXRlayBrb25lYyA9XG4gICgoMS4gLS4gbGFtYmRhKSAqKi4gemFjZXRlaykgKysuIChsYW1iZGEgKiouIGtvbmVjKVxuXG5sZXQgcmF6ZGFsamEgemFjZXRlayBrb25lYyA9IGRvbHppbmEgKHphY2V0ZWsgLS0uIGtvbmVjKVxuXG5sZXQga29yZW5pX2Vub3RlIG4gc2lyaW5hIHZpc2luYSA9XG4gIGxldCBwaSA9IDQuICouIGF0YW4gMS4gaW5cbiAgbGV0IHNyZWRpc2NlID0geyB4ID0gc2lyaW5hIC8uIDIuOyB5ID0gdmlzaW5hIC8uIDIuIH0gaW5cbiAgTGlzdC5pbml0IG4gKGZ1biBpIC0+XG4gICAgICBsZXQga290ID0gMi4gKi4gcGkgKi4gZmxvYXRfb2ZfaW50IGkgLy4gZmxvYXRfb2ZfaW50IG5cbiAgICAgIGFuZCBwb2xtZXIgPSBtaW4gc2lyaW5hIHZpc2luYSAvLiAyLiAqLiAwLjkgaW5cbiAgICAgIHNyZWRpc2NlICsrLiB7IHggPSBwb2xtZXIgKi4gY29zIGtvdDsgeSA9IHBvbG1lciAqLiBzaW4ga290IH0pXG4iXX0=
