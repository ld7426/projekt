// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cmo, use-js-string=true, version=5.8.2

//# unitInfo: Provides: Dune__exe__Vektor
//# unitInfo: Requires: Stdlib, Stdlib__List
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Stdlib = global_data.Stdlib,
    Stdlib_List = global_data.Stdlib__List;
   function symbol(k, vec){return [254, k * vec[1], k * vec[2]];}
   function symbol$0(vec1, vec2){
    return [254, vec1[1] + vec2[1], vec1[2] + vec2[2]];
   }
   function symbol$1(vec1, vec2){return symbol$0(vec1, symbol(-1., vec2));}
   function dolzina(vec){
    return Math.sqrt(Math.pow(vec[1], 2.) + Math.pow(vec[2], 2.));
   }
   function normiraj(vec){return symbol(1. / dolzina(vec), vec);}
   function sredina(opt, zacetek, konec){
    var lambda = opt ? opt[1] : 0.5, _a_ = symbol(lambda, konec);
    return symbol$0(symbol(1. - lambda, zacetek), _a_);
   }
   function razdalja(zacetek, konec){
    return dolzina(symbol$1(zacetek, konec));
   }
   function koreni_enote(n, sirina, visina){
    var sredisce = [254, sirina / 2., visina / 2.];
    return caml_call2
            (Stdlib_List[11],
             n,
             function(i){
              var
               kot = 6.283185307179586 * i / n,
               polmer = caml_call2(Stdlib[16], sirina, visina) / 2. * 0.9;
              return symbol$0
                      (sredisce,
                       [254, polmer * Math.cos(kot), polmer * Math.sin(kot)]);
             });
   }
   var
    Dune_exe_Vektor =
      [0,
       symbol,
       symbol$0,
       symbol$1,
       dolzina,
       normiraj,
       sredina,
       razdalja,
       koreni_enote];
   runtime.caml_register_global(15, Dune_exe_Vektor, "Dune__exe__Vektor");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiIuc3BsZXRuaVZtZXNuaWsuZW9ianMvanNvby9kdW5lX19leGVfX1Zla3Rvci5jbW8uanMiLCJzb3VyY2VSb290IjoiIiwibmFtZXMiOlsic3ltYm9sIiwiayIsInZlYyIsInN5bWJvbCQwIiwidmVjMSIsInZlYzIiLCJzeW1ib2wkMSIsImRvbHppbmEiLCJub3JtaXJhaiIsInNyZWRpbmEiLCJ6YWNldGVrIiwia29uZWMiLCJsYW1iZGEiLCJyYXpkYWxqYSIsImtvcmVuaV9lbm90ZSIsIm4iLCJzaXJpbmEiLCJ2aXNpbmEiLCJzcmVkaXNjZSIsImkiLCJrb3QiLCJwb2xtZXIiXSwic291cmNlcyI6WyIvd29ya3NwYWNlX3Jvb3Qvc3JjL3NwbGV0bmlWbWVzbmlrL3Zla3Rvci5tbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0c7Ozs7Ozs7OztZQUVJQSxPQUFRQyxHQUFFQyxLQUFNLGFBQVJELElBQUVDLFFBQUZELElBQUVDLFFBQXdDO1lBQ2xEQyxTQUFRQyxNQUFLQztJQUFPLGFBQVpELFVBQUtDLFNBQUxELFVBQUtDO0dBQXFEO1lBQ2xFQyxTQUFRRixNQUFLQyxNQUFPLE9BRHBCRixTQUNRQyxNQUZSSixZQUVhSyxPQUE4QjtZQUMzQ0UsUUFBUUw7SUFBTSxPQUFBLFVBQU0sU0FBWkEsY0FBNkIsU0FBN0JBO0dBQTJDO1lBQ25ETSxTQUFTTixLQUFNLE9BSmZGLFlBR0FPLFFBQ1NMLE1BQUFBLEtBQWlDO1lBRTFDTyxhQUF3QkMsU0FBUUM7SUFDRCxJQURyQkMsNkJBQ3FCLE1BUC9CWixPQU1VWSxRQUFzQkQ7SUFDRCxPQU4vQlIsU0FEQUgsWUFNVVksUUFBY0Y7O1lBR3hCRyxTQUFTSCxTQUFRQztJQUFRLE9BTnpCSixRQURBRCxTQU9TSSxTQUFRQztHQUFtQztZQUVwREcsYUFBYUMsR0FBRUMsUUFBT0M7SUFFVCxJQUFYQyxpQkFGYUYsYUFBT0M7SUFHWixPQUFBOzthQUhHRjtzQkFHRUk7Y0FDYjtlQUFJQywwQkFEU0QsSUFIRko7ZUFLUE0sU0FBUyx1QkFMQUwsUUFBT0M7Y0FNUCxPQWhCZmQ7dUJBWUVlOzZCQUdJRyxTQUN5QixTQUZ6QkQsTUFDQUMsU0FDZ0QsU0FGaEREO2FBRXlEO0dBQUM7Ozs7T0FqQmhFcEI7T0FDQUc7T0FDQUc7T0FDQUM7T0FDQUM7T0FFQUM7T0FHQUk7T0FFQUM7OztFIiwic291cmNlc0NvbnRlbnQiOlsidHlwZSB0ID0geyB4IDogZmxvYXQ7IHkgOiBmbG9hdCB9XG5cbmxldCAoICoqLiApIGsgdmVjID0geyB4ID0gayAqLiB2ZWMueDsgeSA9IGsgKi4gdmVjLnkgfVxubGV0ICggKysuICkgdmVjMSB2ZWMyID0geyB4ID0gdmVjMS54ICsuIHZlYzIueDsgeSA9IHZlYzEueSArLiB2ZWMyLnkgfVxubGV0ICggLS0uICkgdmVjMSB2ZWMyID0gdmVjMSArKy4gKC0xLiAqKi4gdmVjMilcbmxldCBkb2x6aW5hIHZlYyA9IHNxcnQgKCh2ZWMueCAqKiAyLikgKy4gKHZlYy55ICoqIDIuKSlcbmxldCBub3JtaXJhaiB2ZWMgPSAoMS4gLy4gZG9semluYSB2ZWMpICoqLiB2ZWNcblxubGV0IHNyZWRpbmEgPyhsYW1iZGEgPSAwLjUpIHphY2V0ZWsga29uZWMgPVxuICAoKDEuIC0uIGxhbWJkYSkgKiouIHphY2V0ZWspICsrLiAobGFtYmRhICoqLiBrb25lYylcblxubGV0IHJhemRhbGphIHphY2V0ZWsga29uZWMgPSBkb2x6aW5hICh6YWNldGVrIC0tLiBrb25lYylcblxubGV0IGtvcmVuaV9lbm90ZSBuIHNpcmluYSB2aXNpbmEgPVxuICBsZXQgcGkgPSA0LiAqLiBhdGFuIDEuIGluXG4gIGxldCBzcmVkaXNjZSA9IHsgeCA9IHNpcmluYSAvLiAyLjsgeSA9IHZpc2luYSAvLiAyLiB9IGluXG4gIExpc3QuaW5pdCBuIChmdW4gaSAtPlxuICAgICAgbGV0IGtvdCA9IDIuICouIHBpICouIGZsb2F0X29mX2ludCBpIC8uIGZsb2F0X29mX2ludCBuXG4gICAgICBhbmQgcG9sbWVyID0gbWluIHNpcmluYSB2aXNpbmEgLy4gMi4gKi4gMC45IGluXG4gICAgICBzcmVkaXNjZSArKy4geyB4ID0gcG9sbWVyICouIGNvcyBrb3Q7IHkgPSBwb2xtZXIgKi4gc2luIGtvdCB9KVxuIl19
